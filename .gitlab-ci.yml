
image: gradle:7.6-jdk19-alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME



debug:
  stage: .pre
  only:
    - beta
    - main
    - merge_requests
  script:
    - echo $PWD

debug-file-tree:
  stage: .pre
  only:
    - beta
    - main
    - merge_requests
  script:
    - ls -R

asset-pipeline:
  stage: build
  only:
    - beta
    - main
    - merge_requests
  script:
    - gradle --build-cache pipeline:build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - pipeline/build
      - .gradle

build-core:
  stage: build
  only:
    - beta
    - main
    - merge_requests
  script:
    - echo $PWD
    - gradle --build-cache core:assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

build-desktop:
  stage: build
  only:
    - beta
    - main
    - merge_requests
  script:
    - gradle --build-cache desktop:assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test-core:
  stage: test
  only:
    - beta
    - main
    - merge_requests
  script:
    - gradle core:check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit: core/build/test-results/test/TEST-*.xml

test-pipeline:
  stage: test
  only:
    - beta
    - main
    - merge_requests
  script:
    - gradle pipeline:check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit: pipeline/build/test-results/test/TEST-*.xml

test-util:
  stage: test
  only:
    - beta
    - main
    - merge_requests
  script:
    - gradle util:check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit: util/build/test-results/test/TEST-*.xml

prepare-release:
  stage: build
  only:
    - main
  script:
    - gradle dist
  cache:
    when: 'on_success'
    policy: push
    paths:
      - desktop/build/libs/*.jar


create-release:
  stage: deploy
  only:
    - main
  dependencies:
    - prepare-release
  cache:
    when: 'always'
    policy: pull
    paths:
      - desktop/build/libs/*.jar
  script:
    - ls

